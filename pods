//Amelia Lipińska 203721 GRA PASJANS KLODLIKE
#include <iostream>
#include <vector>
#include <queue>
#include <stack>

using namespace std;


//STALE DLA KART:
const int MAX_C = 52; //liczba kart w talii

const int KIER = 0;
const int KARO = 1;
const int TREFL = 2;
const int PIK = 3;

const int CZARNY = 0;
const int CZERWONY = 1;
//KARTY
struct Card
{
    //wyglad karty-charakterystyka
    int value;
    int shape; //0->kier, 1->karo, 2->trefl, 3->pik
    int color; //czarny to wartosc 0 a czerwony 1

    bool is_face_up; //czy karta jaest widoczna
    string card_description; //opis karty->kier 2 trefl 3 itd

    //konstruktor domyslny->mówi że tworzymy kartę (nie trzeba tego robic wtedy recznie)
    Card() {}
    //ustalanie kart
    Card(int val, int sha, int col)
    {
        //ustawienie wartosci value-> A dama 2,3...
        value = val;
        //ksztalt karty->kier...
        shape = sha;
        is_face_up = false; //na poczatku karta jest zakryta

        //ustawienie wartosci dla kart

        //tablica figór
        string card_shape[] = { "H", "D", "C", "S" };
        //tablica wartosci
        string card_value[] = { "", "A", "2", "3", "4", "5", "6", "7", "8", "9", "10", "J", "Q", "K" };

        //stworzona karta:
        card_description = card_shape[shape] + card_value[value];

        //ustawienie koloru

        color = (shape == KIER || shape == KARO) ? CZERWONY : CZARNY;
    }

    Card& operator=(const Card& c) {
        value = c.value;
        shape = c.shape;
        color = c.color;
        card_description = c.card_description;
        is_face_up = c.is_face_up;
        return *this;
    }

};

class Gameplay {
    Card deck[MAX_C];
    queue<Card> choice;

    vector<Card> pile1, pile2, pile3, pile4, pile5, pile6, pile7;
    vector<vector<Card>> h1_7 = { pile1, pile2, pile3, pile4, pile5, pile6, pile7 };

    stack<Card> s8, s9, s10, s11;
    vector<stack<Card>> s8_11 = { s8, s9, s10, s11 };

public:
    void generujTalie() {
        int index = 0;
        for (int shape = 0; shape < 4; ++shape) {
            for (int val = 1; val <= 13; ++val) {
                deck[index++] = Card(val, shape, (shape == KIER || shape == KARO) ? CZERWONY : CZARNY);
            }
        }

        // Tasowanie ręczne 
        srand(time(0));

        for (int i = MAX_C - 1; i > 0; --i) {
            int j = rand() % (i + 1);
            swap(deck[i], deck[j]);
        }
    }

    void rozdaj() {
        int position = 0;
        for (int i = 0; i < 7; ++i)
        {
            for (int j = 0; j <= i; ++j) {
                h1_7[i].push_back(deck[position]);
                if (j == i) h1_7[i][j].is_face_up = true;
                position++;
            }
        }
        for (int i = position; i < MAX_C; ++i) {
            choice.push(deck[i]);
        }
    }
};

int main()
{

    Gameplay gra;
    gra.generujTalie();         //  tasowanie i stworzenie talii
    gra.rozdaj();      //  rozłożenie na kolumny
    gra.wyswietlPlansze();      //  graficzne przedstawienie

}
